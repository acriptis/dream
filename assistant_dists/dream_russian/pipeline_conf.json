{
    "connectors": {
        "sentseg": {
            "protocol": "http",
            "timeout": 1.5,
            "url": "http://sentseg:8011/sentseg"
        },
        "ner": {
            "protocol": "http",
            "timeout": 1.5,
            "url": "http://ner:8021/ner"
        }
    },
    "services": {
        "last_chance_service": {
            "is_enabled": true,
            "source": {
                "directory": "/services/something",
                "config": "something_name"
            },
            "connector": {
                "protocol": "python",
                "class_name": "PredefinedTextConnector",
                "response_text": "\u0418\u0437\u0432\u0438\u043d\u0438, \u0447\u0442\u043e-\u0442\u043e \u043f\u043e\u0448\u043b\u043e \u043d\u0435 \u0442\u0430\u043a \u0432 \u043c\u043e\u0435\u043c \u043c\u043e\u0437\u0433\u0443. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u043f\u043e\u0432\u0442\u043e\u0440\u0438 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0443\u044e \u0440\u0435\u043f\u043b\u0438\u043a\u0443.",
                "annotations": {
                    "sentseg": {
                        "punct_sent": "\u0418\u0437\u0432\u0438\u043d\u0438, \u0447\u0442\u043e-\u0442\u043e \u043f\u043e\u0448\u043b\u043e \u043d\u0435 \u0442\u0430\u043a \u0432 \u043c\u043e\u0435\u043c \u043c\u043e\u0437\u0433\u0443. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u043f\u043e\u0432\u0442\u043e\u0440\u0438 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0443\u044e \u0440\u0435\u043f\u043b\u0438\u043a\u0443.",
                        "segments": [
                            "\u0418\u0437\u0432\u0438\u043d\u0438, \u0447\u0442\u043e-\u0442\u043e \u043f\u043e\u0448\u043b\u043e \u043d\u0435 \u0442\u0430\u043a \u0432 \u043c\u043e\u0435\u043c \u043c\u043e\u0437\u0433\u0443.",
                            "\u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u043f\u043e\u0432\u0442\u043e\u0440\u0438 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0443\u044e \u0440\u0435\u043f\u043b\u0438\u043a\u0443."
                        ]
                    },
                    "ner": [
                        []
                    ]
                }
            },
            "state_manager_method": "add_bot_utterance_last_chance",
            "tags": [
                "last_chance"
            ]
        },
        "timeout_service": {
            "is_enabled": true,
            "source": {
                "directory": "/services/something",
                "config": "something_name"
            },
            "connector": {
                "protocol": "python",
                "class_name": "PredefinedTextConnector",
                "response_text": "\u0418\u0437\u0432\u0438\u043d\u0438, \u0447\u0442\u043e-\u0442\u043e \u043f\u043e\u0448\u043b\u043e \u043d\u0435 \u0442\u0430\u043a \u0432 \u043c\u043e\u0435\u043c \u043c\u043e\u0437\u0433\u0443. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u043f\u043e\u0432\u0442\u043e\u0440\u0438 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0443\u044e \u0440\u0435\u043f\u043b\u0438\u043a\u0443.",
                "annotations": {
                    "sentseg": {
                        "punct_sent": "\u0418\u0437\u0432\u0438\u043d\u0438, \u0447\u0442\u043e-\u0442\u043e \u043f\u043e\u0448\u043b\u043e \u043d\u0435 \u0442\u0430\u043a \u0432 \u043c\u043e\u0435\u043c \u043c\u043e\u0437\u0433\u0443. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u043f\u043e\u0432\u0442\u043e\u0440\u0438 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0443\u044e \u0440\u0435\u043f\u043b\u0438\u043a\u0443.",
                        "segments": [
                            "\u0418\u0437\u0432\u0438\u043d\u0438, \u0447\u0442\u043e-\u0442\u043e \u043f\u043e\u0448\u043b\u043e \u043d\u0435 \u0442\u0430\u043a \u0432 \u043c\u043e\u0435\u043c \u043c\u043e\u0437\u0433\u0443.",
                            "\u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u043f\u043e\u0432\u0442\u043e\u0440\u0438 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0443\u044e \u0440\u0435\u043f\u043b\u0438\u043a\u0443."
                        ]
                    },
                    "ner": [
                        []
                    ]
                }
            },
            "state_manager_method": "add_bot_utterance_last_chance",
            "tags": [
                "timeout"
            ]
        },
        "annotators": {
            "spelling_preprocessing": {
                "is_enabled": true,
                "source": {
                    "directory": "/services/something",
                    "config": "something_name"
                },
                "connector": {
                    "protocol": "http",
                    "timeout": 1.0,
                    "url": "http://spelling-preprocessing:8074/respond"
                },
                "dialog_formatter": "state_formatters.dp_formatters:last_utt_dialog",
                "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
                "state_manager_method": "add_annotation_and_reset_human_attributes_for_first_turn"
            },
            "spacy_annotator": {
                "is_enabled": true,
                "source": {
                    "directory": "/services/something",
                    "config": "something_name"
                },
                "connector": {
                    "protocol": "http",
                    "timeout": 1.0,
                    "url": "http://spacy-annotator:8125/respond"
                },
                "dialog_formatter": "state_formatters.dp_formatters:last_utt_dialog",
                "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
                "state_manager_method": "add_annotation_and_reset_human_attributes_for_first_turn"
            },
            "sentseg": {
                "is_enabled": true,
                "source": {
                    "directory": "/services/something",
                    "config": "something_name"
                },
                "connector": "connectors.sentseg",
                "dialog_formatter": "state_formatters.dp_formatters:preproc_last_human_utt_dialog",
                "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
                "previous_services": [
                    "annotators.spelling_preprocessing"
                ],
                "state_manager_method": "add_annotation"
            },
            "badlisted_words": {
                "is_enabled": true,
                "source": {
                    "directory": "/services/something",
                    "config": "something_name"
                },
                "connector": {
                    "protocol": "http",
                    "timeout": 1.0,
                    "url": "http://badlisted-words:8018/badlisted_words"
                },
                "dialog_formatter": "state_formatters.dp_formatters:preproc_and_tokenized_last_human_utt_dialog",
                "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
                "previous_services": [
                    "annotators.spelling_preprocessing",
                    "annotators.spacy_annotator"
                ],
                "state_manager_method": "add_annotation"
            },
            "toxic_classification": {
                "is_enabled": true,
                "source": {
                    "directory": "/services/something",
                    "config": "something_name"
                },
                "connector": {
                    "protocol": "http",
                    "timeout": 1.0,
                    "url": "http://toxic-classification:8126/respond"
                },
                "dialog_formatter": "state_formatters.dp_formatters:preproc_last_human_utt_dialog",
                "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
                "previous_services": [
                    "annotators.spelling_preprocessing"
                ],
                "state_manager_method": "add_annotation"
            },
            "intent_catcher": {
                "is_enabled": true,
                "source": {
                    "directory": "/services/something",
                    "config": "something_name"
                },
                "connector": {
                    "protocol": "http",
                    "timeout": 1.0,
                    "url": "http://intent-catcher:8014/detect"
                },
                "dialog_formatter": "state_formatters.dp_formatters:last_utt_sentseg_segments_dialog",
                "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
                "previous_services": [
                    "annotators.spelling_preprocessing",
                    "annotators.sentseg"
                ],
                "state_manager_method": "add_annotation"
            },
            "ner": {
                "is_enabled": true,
                "source": {
                    "directory": "/services/something",
                    "config": "something_name"
                },
                "connector": "connectors.ner",
                "dialog_formatter": "state_formatters.dp_formatters:ner_formatter_dialog",
                "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
                "previous_services": [
                    "annotators.spelling_preprocessing",
                    "annotators.sentseg"
                ],
                "state_manager_method": "add_annotation"
            },
            "entity_detection": {
                "is_enabled": true,
                "source": {
                    "directory": "/services/something",
                    "config": "something_name"
                },
                "connector": {
                    "protocol": "http",
                    "timeout": 1.0,
                    "url": "http://entity-detection:8103/respond"
                },
                "dialog_formatter": "state_formatters.dp_formatters:entity_detection_formatter_dialog",
                "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
                "previous_services": [
                    "annotators.spelling_preprocessing",
                    "annotators.sentseg"
                ],
                "state_manager_method": "add_annotation"
            },
            "entity_linking": {
                "is_enabled": true,
                "source": {
                    "directory": "/services/something",
                    "config": "something_name"
                },
                "connector": {
                    "protocol": "http",
                    "timeout": 1.0,
                    "url": "http://entity-linking:8075/model"
                },
                "dialog_formatter": "state_formatters.dp_formatters:el_formatter_dialog",
                "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
                "previous_services": [
                    "annotators.ner",
                    "annotators.entity_detection"
                ],
                "state_manager_method": "add_annotation"
            },
            "wiki_parser": {
                "is_enabled": true,
                "source": {
                    "directory": "/services/something",
                    "config": "something_name"
                },
                "connector": {
                    "protocol": "http",
                    "timeout": 1.0,
                    "url": "http://wiki-parser:8077/model"
                },
                "dialog_formatter": "state_formatters.dp_formatters:wp_formatter_dialog",
                "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
                "required_previous_services": [
                    "annotators.entity_linking"
                ],
                "state_manager_method": "add_annotation"
            }
        },
        "response_annotators": {
            "sentseg": {
                "is_enabled": true,
                "source": {
                    "directory": "/services/something",
                    "config": "something_name"
                },
                "connector": "connectors.sentseg",
                "dialog_formatter": "state_formatters.dp_formatters:last_bot_utt_dialog",
                "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
                "previous_services": [
                    "response_annotator_selectors"
                ],
                "state_manager_method": "add_annotation_prev_bot_utt"
            },
            "ner": {
                "is_enabled": true,
                "source": {
                    "directory": "/services/something",
                    "config": "something_name"
                },
                "connector": "connectors.ner",
                "dialog_formatter": "state_formatters.dp_formatters:ner_formatter_last_bot_dialog",
                "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
                "previous_services": [
                    "response_annotator_selectors",
                    "response_annotators.sentseg"
                ],
                "state_manager_method": "add_annotation_prev_bot_utt"
            }
        },
        "response_annotator_selectors": {
            "is_enabled": true,
            "source": {
                "directory": "/services/something",
                "config": "something_name"
            },
            "connector": {
                "protocol": "python",
                "class_name": "skill_selectors.post_annotator_selector.connector:PostAnnotatorSelectorConnector",
                "annotator_names": [
                    "sentseg",
                    "ner"
                ]
            },
            "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
            "tags": [
                "selector"
            ]
        },
        "candidate_annotators": {
            "spacy_annotator": {
                "is_enabled": true,
                "source": {
                    "directory": "/services/something",
                    "config": "something_name"
                },
                "connector": {
                    "protocol": "http",
                    "timeout": 1.0,
                    "url": "http://spacy-annotator:8125/respond_batch"
                },
                "dialog_formatter": "state_formatters.dp_formatters:hypotheses_list",
                "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
                "previous_services": [
                    "skills"
                ],
                "state_manager_method": "add_hypothesis_annotation_batch"
            },
            "badlisted_words": {
                "is_enabled": true,
                "source": {
                    "directory": "/services/something",
                    "config": "something_name"
                },
                "connector": {
                    "protocol": "http",
                    "timeout": 1.0,
                    "url": "http://badlisted-words:8018/badlisted_words_batch"
                },
                "dialog_formatter": "state_formatters.dp_formatters:hypotheses_list",
                "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
                "previous_services": [
                    "candidate_annotators.spacy_annotator"
                ],
                "state_manager_method": "add_hypothesis_annotation_batch"
            },
            "toxic_classification": {
                "is_enabled": true,
                "source": {
                    "directory": "/services/something",
                    "config": "something_name"
                },
                "connector": {
                    "protocol": "http",
                    "timeout": 1.0,
                    "url": "http://toxic-classification:8126/respond_batch"
                },
                "dialog_formatter": "state_formatters.dp_formatters:hypotheses_list",
                "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
                "previous_services": [
                    "skills"
                ],
                "state_manager_method": "add_hypothesis_annotation_batch"
            },
            "entity_detection": {
                "is_enabled": true,
                "source": {
                    "directory": "/services/something",
                    "config": "something_name"
                },
                "connector": {
                    "protocol": "http",
                    "timeout": 1.0,
                    "url": "http://entity-detection:8103/respond_batch"
                },
                "dialog_formatter": "state_formatters.dp_formatters:hypotheses_list",
                "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
                "previous_services": [
                    "skills"
                ],
                "state_manager_method": "add_hypothesis_annotation_batch"
            },
            "dialogrpt": {
                "is_enabled": true,
                "source": {
                    "directory": "/services/something",
                    "config": "something_name"
                },
                "connector": {
                    "protocol": "http",
                    "timeout": 1.0,
                    "url": "http://dialogrpt:8122/respond"
                },
                "dialog_formatter": "state_formatters.dp_formatters:hypotheses_with_context_list",
                "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
                "previous_services": [
                    "skills"
                ],
                "state_manager_method": "add_hypothesis_annotation_batch"
            }
        },
        "skill_selectors": {
            "rule_based_selector": {
                "is_enabled": true,
                "source": {
                    "directory": "/services/something",
                    "config": "something_name"
                },
                "connector": {
                    "protocol": "python",
                    "class_name": "skill_selectors.rule_based_selector.connector:RuleBasedSkillSelectorConnector"
                },
                "dialog_formatter": "state_formatters.dp_formatters:base_skill_selector_formatter_dialog",
                "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
                "previous_services": [
                    "annotators"
                ],
                "tags": [
                    "selector"
                ]
            }
        },
        "skills": {
            "dff_program_y_skill": {
                "is_enabled": true,
                "source": {
                    "directory": "/services/something",
                    "config": "something_name"
                },
                "connector": {
                    "protocol": "http",
                    "timeout": 2.0,
                    "url": "http://dff-program-y-skill:8008/respond"
                },
                "dialog_formatter": "state_formatters.dp_formatters:dff_program_y_skill_formatter",
                "response_formatter": "state_formatters.dp_formatters:skill_with_attributes_formatter_service",
                "previous_services": [
                    "skill_selectors"
                ],
                "state_manager_method": "add_hypothesis"
            },
            "dff_intent_responder_skill": {
                "is_enabled": true,
                "source": {
                    "directory": "/services/something",
                    "config": "something_name"
                },
                "connector": {
                    "protocol": "http",
                    "timeout": 2.0,
                    "url": "http://dff-intent-responder-skill:8012/respond"
                },
                "dialog_formatter": "state_formatters.dp_formatters:dff_intent_responder_skill_formatter",
                "response_formatter": "state_formatters.dp_formatters:skill_with_attributes_formatter_service",
                "previous_services": [
                    "skill_selectors"
                ],
                "state_manager_method": "add_hypothesis"
            },
            "dummy_skill": {
                "is_enabled": true,
                "source": {
                    "directory": "/services/something",
                    "config": "something_name"
                },
                "connector": {
                    "protocol": "python",
                    "class_name": "skills.dummy_skill.connector:DummySkillConnector"
                },
                "dialog_formatter": "state_formatters.dp_formatters:utt_sentrewrite_modified_last_dialog",
                "response_formatter": "state_formatters.dp_formatters:skill_with_attributes_formatter_service",
                "previous_services": [
                    "skill_selectors"
                ],
                "state_manager_method": "add_hypothesis"
            },
            "personal_info_skill": {
                "is_enabled": true,
                "source": {
                    "directory": "/services/something",
                    "config": "something_name"
                },
                "connector": {
                    "protocol": "http",
                    "timeout": 2.0,
                    "url": "http://personal-info-skill:8030/respond"
                },
                "dialog_formatter": "state_formatters.dp_formatters:utt_sentseg_punct_dialog",
                "response_formatter": "state_formatters.dp_formatters:skill_with_attributes_formatter_service",
                "previous_services": [
                    "skill_selectors"
                ],
                "state_manager_method": "add_hypothesis"
            },
            "dff_friendship_skill": {
                "is_enabled": true,
                "source": {
                    "directory": "/services/something",
                    "config": "something_name"
                },
                "connector": {
                    "protocol": "http",
                    "timeout": 2.0,
                    "url": "http://dff-friendship-skill:8086/respond"
                },
                "dialog_formatter": "state_formatters.dp_formatters:dff_friendship_skill_formatter",
                "response_formatter": "state_formatters.dp_formatters:skill_with_attributes_formatter_service",
                "previous_services": [
                    "skill_selectors"
                ],
                "state_manager_method": "add_hypothesis"
            },
            "dff_generative_skill": {
                "is_enabled": true,
                "source": {
                    "directory": "/services/something",
                    "config": "something_name"
                },
                "connector": {
                    "protocol": "http",
                    "timeout": 4.0,
                    "url": "http://dff-generative-skill:8092/respond"
                },
                "dialog_formatter": "state_formatters.dp_formatters:dff_generative_skill_formatter",
                "response_formatter": "state_formatters.dp_formatters:skill_with_attributes_formatter_service",
                "previous_services": [
                    "skill_selectors"
                ],
                "state_manager_method": "add_hypothesis"
            },
            "dff_template_skill": {
                "is_enabled": true,
                "source": {
                    "directory": "/services/something",
                    "config": "something_name"
                },
                "connector": {
                    "protocol": "http",
                    "timeout": 2.0,
                    "url": "http://dff-template-skill:8120/respond"
                },
                "dialog_formatter": "state_formatters.dp_formatters:dff_template_skill_formatter",
                "response_formatter": "state_formatters.dp_formatters:skill_with_attributes_formatter_service",
                "previous_services": [
                    "skill_selectors"
                ],
                "state_manager_method": "add_hypothesis"
            }
        },
        "response_selectors": {
            "convers_evaluation_selector": {
                "is_enabled": true,
                "source": {
                    "directory": "/services/something",
                    "config": "something_name"
                },
                "connector": {
                    "protocol": "http",
                    "timeout": 1.0,
                    "url": "http://convers-evaluation-selector:8009/respond"
                },
                "dialog_formatter": "state_formatters.dp_formatters:full_history_dialog",
                "response_formatter": "state_formatters.dp_formatters:base_response_selector_formatter_service",
                "previous_services": [
                    "candidate_annotators"
                ],
                "state_manager_method": "add_bot_utterance"
            }
        }
    },
    "metadata": {
        "display_name": "Dream Russian",
        "author": "DeepPavlov",
        "description": "Russian version of DeepPavlov Dream Socialbot. This is a generative-based socialbot that uses Russian DialoGPT by DeepPavlov to generate most of the responses. It also contains intent catcher and responder components to cover special user requests.",
        "version": "0.1.0",
        "date_created": "2022-12-12T12:12:00",
        "ram_usage": "50 GB",
        "gpu_usage": "50 GB",
        "disk_usage": "50 GB"
    }
}